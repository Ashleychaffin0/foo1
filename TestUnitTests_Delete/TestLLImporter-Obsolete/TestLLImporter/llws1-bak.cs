//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="LLWS1Soap", Namespace="http://tempuri.org/")]
public partial class LLWS1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback HelloWorld_LLWS1OperationCompleted;
    
    private System.Threading.SendOrPostCallback ImportOperationCompleted;
    
    /// <remarks/>
    public LLWS1() {
        this.Url = "http://www.leadslightning.com/leadslightningws/LLWS1/LLWS1.asmx";
    }
    
    /// <remarks/>
    public event HelloWorld_LLWS1CompletedEventHandler HelloWorld_LLWS1Completed;
    
    /// <remarks/>
    public event ImportCompletedEventHandler ImportCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld_LLWS1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string HelloWorld_LLWS1() {
        object[] results = this.Invoke("HelloWorld_LLWS1", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginHelloWorld_LLWS1(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("HelloWorld_LLWS1", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndHelloWorld_LLWS1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void HelloWorld_LLWS1Async() {
        this.HelloWorld_LLWS1Async(null);
    }
    
    /// <remarks/>
    public void HelloWorld_LLWS1Async(object userState) {
        if ((this.HelloWorld_LLWS1OperationCompleted == null)) {
            this.HelloWorld_LLWS1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorld_LLWS1OperationCompleted);
        }
        this.InvokeAsync("HelloWorld_LLWS1", new object[0], this.HelloWorld_LLWS1OperationCompleted, userState);
    }
    
    private void OnHelloWorld_LLWS1OperationCompleted(object arg) {
        if ((this.HelloWorld_LLWS1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HelloWorld_LLWS1Completed(this, new HelloWorld_LLWS1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Import", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Import(string UserID, string Password, int EventID, string SwipeData, string MapCfgFile, int MapType, string TerminalID) {
        object[] results = this.Invoke("Import", new object[] {
                    UserID,
                    Password,
                    EventID,
                    SwipeData,
                    MapCfgFile,
                    MapType,
                    TerminalID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginImport(string UserID, string Password, int EventID, string SwipeData, string MapCfgFile, int MapType, string TerminalID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Import", new object[] {
                    UserID,
                    Password,
                    EventID,
                    SwipeData,
                    MapCfgFile,
                    MapType,
                    TerminalID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndImport(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ImportAsync(string UserID, string Password, int EventID, string SwipeData, string MapCfgFile, int MapType, string TerminalID) {
        this.ImportAsync(UserID, Password, EventID, SwipeData, MapCfgFile, MapType, TerminalID, null);
    }
    
    /// <remarks/>
    public void ImportAsync(string UserID, string Password, int EventID, string SwipeData, string MapCfgFile, int MapType, string TerminalID, object userState) {
        if ((this.ImportOperationCompleted == null)) {
            this.ImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportOperationCompleted);
        }
        this.InvokeAsync("Import", new object[] {
                    UserID,
                    Password,
                    EventID,
                    SwipeData,
                    MapCfgFile,
                    MapType,
                    TerminalID}, this.ImportOperationCompleted, userState);
    }
    
    private void OnImportOperationCompleted(object arg) {
        if ((this.ImportCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ImportCompleted(this, new ImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void HelloWorld_LLWS1CompletedEventHandler(object sender, HelloWorld_LLWS1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HelloWorld_LLWS1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HelloWorld_LLWS1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void ImportCompletedEventHandler(object sender, ImportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

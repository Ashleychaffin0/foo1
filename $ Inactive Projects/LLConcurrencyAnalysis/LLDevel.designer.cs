#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LLConcurrencyAnalysis
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="lldevel")]
	public partial class LLDevelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAccount(tblAccount instance);
    partial void UpdatetblAccount(tblAccount instance);
    partial void DeletetblAccount(tblAccount instance);
    partial void InserttblEvent(tblEvent instance);
    partial void UpdatetblEvent(tblEvent instance);
    partial void DeletetblEvent(tblEvent instance);
    partial void InserttblMapCfg(tblMapCfg instance);
    partial void UpdatetblMapCfg(tblMapCfg instance);
    partial void DeletetblMapCfg(tblMapCfg instance);
    partial void InserttblPersonByEvent(tblPersonByEvent instance);
    partial void UpdatetblPersonByEvent(tblPersonByEvent instance);
    partial void DeletetblPersonByEvent(tblPersonByEvent instance);
    partial void InserttblSavedImport(tblSavedImport instance);
    partial void UpdatetblSavedImport(tblSavedImport instance);
    partial void DeletetblSavedImport(tblSavedImport instance);
    partial void InserttblSwipe(tblSwipe instance);
    partial void UpdatetblSwipe(tblSwipe instance);
    partial void DeletetblSwipe(tblSwipe instance);
    partial void InserttblSwipesText(tblSwipesText instance);
    partial void UpdatetblSwipesText(tblSwipesText instance);
    partial void DeletetblSwipesText(tblSwipesText instance);
    partial void InserttblTerminal(tblTerminal instance);
    partial void UpdatetblTerminal(tblTerminal instance);
    partial void DeletetblTerminal(tblTerminal instance);
    #endregion
		
		public LLDevelDataContext() : 
				base(global::LLConcurrencyAnalysis.Properties.Settings.Default.lldevelConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LLDevelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LLDevelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LLDevelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LLDevelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAccount> tblAccounts
		{
			get
			{
				return this.GetTable<tblAccount>();
			}
		}
		
		public System.Data.Linq.Table<tblEvent> tblEvents
		{
			get
			{
				return this.GetTable<tblEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblImportTracking> tblImportTrackings
		{
			get
			{
				return this.GetTable<tblImportTracking>();
			}
		}
		
		public System.Data.Linq.Table<tblMapCfg> tblMapCfgs
		{
			get
			{
				return this.GetTable<tblMapCfg>();
			}
		}
		
		public System.Data.Linq.Table<tblPersonByEvent> tblPersonByEvents
		{
			get
			{
				return this.GetTable<tblPersonByEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblSavedImport> tblSavedImports
		{
			get
			{
				return this.GetTable<tblSavedImport>();
			}
		}
		
		public System.Data.Linq.Table<tblSwipe> tblSwipes
		{
			get
			{
				return this.GetTable<tblSwipe>();
			}
		}
		
		public System.Data.Linq.Table<tblSwipesText> tblSwipesTexts
		{
			get
			{
				return this.GetTable<tblSwipesText>();
			}
		}
		
		public System.Data.Linq.Table<tblTerminal> tblTerminals
		{
			get
			{
				return this.GetTable<tblTerminal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAccounts")]
	public partial class tblAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AcctID;
		
		private string _UserID;
		
		private string _UserID_Original;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _emailAddress;
		
		private int _Creator;
		
		private byte _AcctType;
		
		private string _PasswordInPlainText;
		
		private System.Nullable<byte> _EmailSent;
		
		private System.Nullable<bool> _Activated;
		
		private bool _Enabled;
		
		private int _LeadsAccessDuration;
		
		private System.Nullable<bool> _DoNotRequireCouponCode;
		
		private System.Data.Linq.Binary _RCLogo;
		
		private string _RCContactInfo;
		
		private string _PwdToBeEmailed;
		
		private System.Nullable<bool> _AcctIsStandAlone;
		
		private System.Nullable<byte> _AcctGenerator;
		
		private System.Nullable<bool> _AcctIsAlive;
		
		private System.Nullable<bool> _GoldAcct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcctIDChanging(int value);
    partial void OnAcctIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserID_OriginalChanging(string value);
    partial void OnUserID_OriginalChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnCreatorChanging(int value);
    partial void OnCreatorChanged();
    partial void OnAcctTypeChanging(byte value);
    partial void OnAcctTypeChanged();
    partial void OnPasswordInPlainTextChanging(string value);
    partial void OnPasswordInPlainTextChanged();
    partial void OnEmailSentChanging(System.Nullable<byte> value);
    partial void OnEmailSentChanged();
    partial void OnActivatedChanging(System.Nullable<bool> value);
    partial void OnActivatedChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    partial void OnLeadsAccessDurationChanging(int value);
    partial void OnLeadsAccessDurationChanged();
    partial void OnDoNotRequireCouponCodeChanging(System.Nullable<bool> value);
    partial void OnDoNotRequireCouponCodeChanged();
    partial void OnRCLogoChanging(System.Data.Linq.Binary value);
    partial void OnRCLogoChanged();
    partial void OnRCContactInfoChanging(string value);
    partial void OnRCContactInfoChanged();
    partial void OnPwdToBeEmailedChanging(string value);
    partial void OnPwdToBeEmailedChanged();
    partial void OnAcctIsStandAloneChanging(System.Nullable<bool> value);
    partial void OnAcctIsStandAloneChanged();
    partial void OnAcctGeneratorChanging(System.Nullable<byte> value);
    partial void OnAcctGeneratorChanged();
    partial void OnAcctIsAliveChanging(System.Nullable<bool> value);
    partial void OnAcctIsAliveChanged();
    partial void OnGoldAcctChanging(System.Nullable<bool> value);
    partial void OnGoldAcctChanged();
    #endregion
		
		public tblAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AcctID
		{
			get
			{
				return this._AcctID;
			}
			set
			{
				if ((this._AcctID != value))
				{
					this.OnAcctIDChanging(value);
					this.SendPropertyChanging();
					this._AcctID = value;
					this.SendPropertyChanged("AcctID");
					this.OnAcctIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID_Original", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID_Original
		{
			get
			{
				return this._UserID_Original;
			}
			set
			{
				if ((this._UserID_Original != value))
				{
					this.OnUserID_OriginalChanging(value);
					this.SendPropertyChanging();
					this._UserID_Original = value;
					this.SendPropertyChanged("UserID_Original");
					this.OnUserID_OriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddress", DbType="VarChar(80)")]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int NOT NULL")]
		public int Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctType", DbType="TinyInt NOT NULL")]
		public byte AcctType
		{
			get
			{
				return this._AcctType;
			}
			set
			{
				if ((this._AcctType != value))
				{
					this.OnAcctTypeChanging(value);
					this.SendPropertyChanging();
					this._AcctType = value;
					this.SendPropertyChanged("AcctType");
					this.OnAcctTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordInPlainText", DbType="VarChar(50)")]
		public string PasswordInPlainText
		{
			get
			{
				return this._PasswordInPlainText;
			}
			set
			{
				if ((this._PasswordInPlainText != value))
				{
					this.OnPasswordInPlainTextChanging(value);
					this.SendPropertyChanging();
					this._PasswordInPlainText = value;
					this.SendPropertyChanged("PasswordInPlainText");
					this.OnPasswordInPlainTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSent", DbType="TinyInt")]
		public System.Nullable<byte> EmailSent
		{
			get
			{
				return this._EmailSent;
			}
			set
			{
				if ((this._EmailSent != value))
				{
					this.OnEmailSentChanging(value);
					this.SendPropertyChanging();
					this._EmailSent = value;
					this.SendPropertyChanged("EmailSent");
					this.OnEmailSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit")]
		public System.Nullable<bool> Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadsAccessDuration", DbType="Int NOT NULL")]
		public int LeadsAccessDuration
		{
			get
			{
				return this._LeadsAccessDuration;
			}
			set
			{
				if ((this._LeadsAccessDuration != value))
				{
					this.OnLeadsAccessDurationChanging(value);
					this.SendPropertyChanging();
					this._LeadsAccessDuration = value;
					this.SendPropertyChanged("LeadsAccessDuration");
					this.OnLeadsAccessDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotRequireCouponCode", DbType="Bit")]
		public System.Nullable<bool> DoNotRequireCouponCode
		{
			get
			{
				return this._DoNotRequireCouponCode;
			}
			set
			{
				if ((this._DoNotRequireCouponCode != value))
				{
					this.OnDoNotRequireCouponCodeChanging(value);
					this.SendPropertyChanging();
					this._DoNotRequireCouponCode = value;
					this.SendPropertyChanged("DoNotRequireCouponCode");
					this.OnDoNotRequireCouponCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCLogo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RCLogo
		{
			get
			{
				return this._RCLogo;
			}
			set
			{
				if ((this._RCLogo != value))
				{
					this.OnRCLogoChanging(value);
					this.SendPropertyChanging();
					this._RCLogo = value;
					this.SendPropertyChanged("RCLogo");
					this.OnRCLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCContactInfo", DbType="VarChar(500)")]
		public string RCContactInfo
		{
			get
			{
				return this._RCContactInfo;
			}
			set
			{
				if ((this._RCContactInfo != value))
				{
					this.OnRCContactInfoChanging(value);
					this.SendPropertyChanging();
					this._RCContactInfo = value;
					this.SendPropertyChanged("RCContactInfo");
					this.OnRCContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwdToBeEmailed", DbType="VarChar(50)")]
		public string PwdToBeEmailed
		{
			get
			{
				return this._PwdToBeEmailed;
			}
			set
			{
				if ((this._PwdToBeEmailed != value))
				{
					this.OnPwdToBeEmailedChanging(value);
					this.SendPropertyChanging();
					this._PwdToBeEmailed = value;
					this.SendPropertyChanged("PwdToBeEmailed");
					this.OnPwdToBeEmailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctIsStandAlone", DbType="Bit")]
		public System.Nullable<bool> AcctIsStandAlone
		{
			get
			{
				return this._AcctIsStandAlone;
			}
			set
			{
				if ((this._AcctIsStandAlone != value))
				{
					this.OnAcctIsStandAloneChanging(value);
					this.SendPropertyChanging();
					this._AcctIsStandAlone = value;
					this.SendPropertyChanged("AcctIsStandAlone");
					this.OnAcctIsStandAloneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctGenerator", DbType="TinyInt")]
		public System.Nullable<byte> AcctGenerator
		{
			get
			{
				return this._AcctGenerator;
			}
			set
			{
				if ((this._AcctGenerator != value))
				{
					this.OnAcctGeneratorChanging(value);
					this.SendPropertyChanging();
					this._AcctGenerator = value;
					this.SendPropertyChanged("AcctGenerator");
					this.OnAcctGeneratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctIsAlive", DbType="Bit")]
		public System.Nullable<bool> AcctIsAlive
		{
			get
			{
				return this._AcctIsAlive;
			}
			set
			{
				if ((this._AcctIsAlive != value))
				{
					this.OnAcctIsAliveChanging(value);
					this.SendPropertyChanging();
					this._AcctIsAlive = value;
					this.SendPropertyChanged("AcctIsAlive");
					this.OnAcctIsAliveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldAcct", DbType="Bit")]
		public System.Nullable<bool> GoldAcct
		{
			get
			{
				return this._GoldAcct;
			}
			set
			{
				if ((this._GoldAcct != value))
				{
					this.OnGoldAcctChanging(value);
					this.SendPropertyChanging();
					this._GoldAcct = value;
					this.SendPropertyChanged("GoldAcct");
					this.OnGoldAcctChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvents")]
	public partial class tblEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private string _EventName;
		
		private System.DateTime _EventStartDate;
		
		private System.DateTime _EventEndDate;
		
		private string _EventCity;
		
		private string _EventState;
		
		private string _EventCountry;
		
		private System.Nullable<int> _EventShowMgmtID;
		
		private int _EventRCID;
		
		private System.Data.Linq.Binary _EventLogo;
		
		private System.Nullable<int> _EvImOpID;
		
		private System.Nullable<int> _ETZID;
		
		private System.Nullable<byte> _ImportType;
		
		private System.Nullable<int> _Flags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventStartDateChanging(System.DateTime value);
    partial void OnEventStartDateChanged();
    partial void OnEventEndDateChanging(System.DateTime value);
    partial void OnEventEndDateChanged();
    partial void OnEventCityChanging(string value);
    partial void OnEventCityChanged();
    partial void OnEventStateChanging(string value);
    partial void OnEventStateChanged();
    partial void OnEventCountryChanging(string value);
    partial void OnEventCountryChanged();
    partial void OnEventShowMgmtIDChanging(System.Nullable<int> value);
    partial void OnEventShowMgmtIDChanged();
    partial void OnEventRCIDChanging(int value);
    partial void OnEventRCIDChanged();
    partial void OnEventLogoChanging(System.Data.Linq.Binary value);
    partial void OnEventLogoChanged();
    partial void OnEvImOpIDChanging(System.Nullable<int> value);
    partial void OnEvImOpIDChanged();
    partial void OnETZIDChanging(System.Nullable<int> value);
    partial void OnETZIDChanged();
    partial void OnImportTypeChanging(System.Nullable<byte> value);
    partial void OnImportTypeChanged();
    partial void OnFlagsChanging(System.Nullable<int> value);
    partial void OnFlagsChanged();
    #endregion
		
		public tblEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventStartDate
		{
			get
			{
				return this._EventStartDate;
			}
			set
			{
				if ((this._EventStartDate != value))
				{
					this.OnEventStartDateChanging(value);
					this.SendPropertyChanging();
					this._EventStartDate = value;
					this.SendPropertyChanged("EventStartDate");
					this.OnEventStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventEndDate
		{
			get
			{
				return this._EventEndDate;
			}
			set
			{
				if ((this._EventEndDate != value))
				{
					this.OnEventEndDateChanging(value);
					this.SendPropertyChanging();
					this._EventEndDate = value;
					this.SendPropertyChanged("EventEndDate");
					this.OnEventEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCity", DbType="VarChar(100)")]
		public string EventCity
		{
			get
			{
				return this._EventCity;
			}
			set
			{
				if ((this._EventCity != value))
				{
					this.OnEventCityChanging(value);
					this.SendPropertyChanging();
					this._EventCity = value;
					this.SendPropertyChanged("EventCity");
					this.OnEventCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventState", DbType="VarChar(50)")]
		public string EventState
		{
			get
			{
				return this._EventState;
			}
			set
			{
				if ((this._EventState != value))
				{
					this.OnEventStateChanging(value);
					this.SendPropertyChanging();
					this._EventState = value;
					this.SendPropertyChanged("EventState");
					this.OnEventStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCountry", DbType="VarChar(100)")]
		public string EventCountry
		{
			get
			{
				return this._EventCountry;
			}
			set
			{
				if ((this._EventCountry != value))
				{
					this.OnEventCountryChanging(value);
					this.SendPropertyChanging();
					this._EventCountry = value;
					this.SendPropertyChanged("EventCountry");
					this.OnEventCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventShowMgmtID", DbType="Int")]
		public System.Nullable<int> EventShowMgmtID
		{
			get
			{
				return this._EventShowMgmtID;
			}
			set
			{
				if ((this._EventShowMgmtID != value))
				{
					this.OnEventShowMgmtIDChanging(value);
					this.SendPropertyChanging();
					this._EventShowMgmtID = value;
					this.SendPropertyChanged("EventShowMgmtID");
					this.OnEventShowMgmtIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventRCID", DbType="Int NOT NULL")]
		public int EventRCID
		{
			get
			{
				return this._EventRCID;
			}
			set
			{
				if ((this._EventRCID != value))
				{
					this.OnEventRCIDChanging(value);
					this.SendPropertyChanging();
					this._EventRCID = value;
					this.SendPropertyChanged("EventRCID");
					this.OnEventRCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLogo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary EventLogo
		{
			get
			{
				return this._EventLogo;
			}
			set
			{
				if ((this._EventLogo != value))
				{
					this.OnEventLogoChanging(value);
					this.SendPropertyChanging();
					this._EventLogo = value;
					this.SendPropertyChanged("EventLogo");
					this.OnEventLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvImOpID", DbType="Int")]
		public System.Nullable<int> EvImOpID
		{
			get
			{
				return this._EvImOpID;
			}
			set
			{
				if ((this._EvImOpID != value))
				{
					this.OnEvImOpIDChanging(value);
					this.SendPropertyChanging();
					this._EvImOpID = value;
					this.SendPropertyChanged("EvImOpID");
					this.OnEvImOpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETZID", DbType="Int")]
		public System.Nullable<int> ETZID
		{
			get
			{
				return this._ETZID;
			}
			set
			{
				if ((this._ETZID != value))
				{
					this.OnETZIDChanging(value);
					this.SendPropertyChanging();
					this._ETZID = value;
					this.SendPropertyChanged("ETZID");
					this.OnETZIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportType", DbType="TinyInt")]
		public System.Nullable<byte> ImportType
		{
			get
			{
				return this._ImportType;
			}
			set
			{
				if ((this._ImportType != value))
				{
					this.OnImportTypeChanging(value);
					this.SendPropertyChanging();
					this._ImportType = value;
					this.SendPropertyChanged("ImportType");
					this.OnImportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImportTracking")]
	public partial class tblImportTracking
	{
		
		private int _SwipeID;
		
		private int _SeqNum;
		
		private int _EventID;
		
		private int _AcctID;
		
		private System.DateTime _ImportTimeStamp;
		
		public tblImportTracking()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwipeID", DbType="Int NOT NULL")]
		public int SwipeID
		{
			get
			{
				return this._SwipeID;
			}
			set
			{
				if ((this._SwipeID != value))
				{
					this._SwipeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNum", DbType="Int NOT NULL")]
		public int SeqNum
		{
			get
			{
				return this._SeqNum;
			}
			set
			{
				if ((this._SeqNum != value))
				{
					this._SeqNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctID", DbType="Int NOT NULL")]
		public int AcctID
		{
			get
			{
				return this._AcctID;
			}
			set
			{
				if ((this._AcctID != value))
				{
					this._AcctID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime ImportTimeStamp
		{
			get
			{
				return this._ImportTimeStamp;
			}
			set
			{
				if ((this._ImportTimeStamp != value))
				{
					this._ImportTimeStamp = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMapCfg")]
	public partial class tblMapCfg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MapCfgID;
		
		private string _MapCfgContents;
		
		private int _MapCfgCRC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapCfgIDChanging(int value);
    partial void OnMapCfgIDChanged();
    partial void OnMapCfgContentsChanging(string value);
    partial void OnMapCfgContentsChanged();
    partial void OnMapCfgCRCChanging(int value);
    partial void OnMapCfgCRCChanged();
    #endregion
		
		public tblMapCfg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCfgID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MapCfgID
		{
			get
			{
				return this._MapCfgID;
			}
			set
			{
				if ((this._MapCfgID != value))
				{
					this.OnMapCfgIDChanging(value);
					this.SendPropertyChanging();
					this._MapCfgID = value;
					this.SendPropertyChanged("MapCfgID");
					this.OnMapCfgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCfgContents", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MapCfgContents
		{
			get
			{
				return this._MapCfgContents;
			}
			set
			{
				if ((this._MapCfgContents != value))
				{
					this.OnMapCfgContentsChanging(value);
					this.SendPropertyChanging();
					this._MapCfgContents = value;
					this.SendPropertyChanged("MapCfgContents");
					this.OnMapCfgContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCfgCRC", DbType="Int NOT NULL")]
		public int MapCfgCRC
		{
			get
			{
				return this._MapCfgCRC;
			}
			set
			{
				if ((this._MapCfgCRC != value))
				{
					this.OnMapCfgCRCChanging(value);
					this.SendPropertyChanging();
					this._MapCfgCRC = value;
					this.SendPropertyChanged("MapCfgCRC");
					this.OnMapCfgCRCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPersonByEvent")]
	public partial class tblPersonByEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonEventID;
		
		private int _EventID;
		
		private long _Hashvalue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonEventIDChanging(int value);
    partial void OnPersonEventIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnHashvalueChanging(long value);
    partial void OnHashvalueChanged();
    #endregion
		
		public tblPersonByEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonEventID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonEventID
		{
			get
			{
				return this._PersonEventID;
			}
			set
			{
				if ((this._PersonEventID != value))
				{
					this.OnPersonEventIDChanging(value);
					this.SendPropertyChanging();
					this._PersonEventID = value;
					this.SendPropertyChanged("PersonEventID");
					this.OnPersonEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hashvalue", DbType="BigInt NOT NULL")]
		public long Hashvalue
		{
			get
			{
				return this._Hashvalue;
			}
			set
			{
				if ((this._Hashvalue != value))
				{
					this.OnHashvalueChanging(value);
					this.SendPropertyChanging();
					this._Hashvalue = value;
					this.SendPropertyChanged("Hashvalue");
					this.OnHashvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSavedImports")]
	public partial class tblSavedImport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SavedImportID;
		
		private System.DateTime _WhenImported;
		
		private int _AcctID;
		
		private int _EventID;
		
		private System.Nullable<int> _RCAcctID;
		
		private int _MapCfgID;
		
		private bool _IgnoreFirstRecord;
		
		private bool _DataIsExpanded;
		
		private int _Flags;
		
		private bool _IsVisitorDataCompressed;
		
		private string _TerminalSerial;
		
		private int _DataLen;
		
		private string _VisitorData;
		
		private int _DataLenCompressed;
		
		private System.Nullable<int> _RecordCount;
		
		private System.Nullable<int> _TallTableInsertions;
		
		private System.Nullable<int> _ResponseInsertions;
		
		private System.Nullable<int> _BulkFallbacks_TallTable;
		
		private System.Nullable<int> _BulkFallbacks_Responses;
		
		private System.Nullable<int> _MillisecondsToImport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSavedImportIDChanging(int value);
    partial void OnSavedImportIDChanged();
    partial void OnWhenImportedChanging(System.DateTime value);
    partial void OnWhenImportedChanged();
    partial void OnAcctIDChanging(int value);
    partial void OnAcctIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnRCAcctIDChanging(System.Nullable<int> value);
    partial void OnRCAcctIDChanged();
    partial void OnMapCfgIDChanging(int value);
    partial void OnMapCfgIDChanged();
    partial void OnIgnoreFirstRecordChanging(bool value);
    partial void OnIgnoreFirstRecordChanged();
    partial void OnDataIsExpandedChanging(bool value);
    partial void OnDataIsExpandedChanged();
    partial void OnFlagsChanging(int value);
    partial void OnFlagsChanged();
    partial void OnIsVisitorDataCompressedChanging(bool value);
    partial void OnIsVisitorDataCompressedChanged();
    partial void OnTerminalSerialChanging(string value);
    partial void OnTerminalSerialChanged();
    partial void OnDataLenChanging(int value);
    partial void OnDataLenChanged();
    partial void OnVisitorDataChanging(string value);
    partial void OnVisitorDataChanged();
    partial void OnDataLenCompressedChanging(int value);
    partial void OnDataLenCompressedChanged();
    partial void OnRecordCountChanging(System.Nullable<int> value);
    partial void OnRecordCountChanged();
    partial void OnTallTableInsertionsChanging(System.Nullable<int> value);
    partial void OnTallTableInsertionsChanged();
    partial void OnResponseInsertionsChanging(System.Nullable<int> value);
    partial void OnResponseInsertionsChanged();
    partial void OnBulkFallbacks_TallTableChanging(System.Nullable<int> value);
    partial void OnBulkFallbacks_TallTableChanged();
    partial void OnBulkFallbacks_ResponsesChanging(System.Nullable<int> value);
    partial void OnBulkFallbacks_ResponsesChanged();
    partial void OnMillisecondsToImportChanging(System.Nullable<int> value);
    partial void OnMillisecondsToImportChanged();
    #endregion
		
		public tblSavedImport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedImportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SavedImportID
		{
			get
			{
				return this._SavedImportID;
			}
			set
			{
				if ((this._SavedImportID != value))
				{
					this.OnSavedImportIDChanging(value);
					this.SendPropertyChanging();
					this._SavedImportID = value;
					this.SendPropertyChanged("SavedImportID");
					this.OnSavedImportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhenImported", DbType="DateTime NOT NULL")]
		public System.DateTime WhenImported
		{
			get
			{
				return this._WhenImported;
			}
			set
			{
				if ((this._WhenImported != value))
				{
					this.OnWhenImportedChanging(value);
					this.SendPropertyChanging();
					this._WhenImported = value;
					this.SendPropertyChanged("WhenImported");
					this.OnWhenImportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctID", DbType="Int NOT NULL")]
		public int AcctID
		{
			get
			{
				return this._AcctID;
			}
			set
			{
				if ((this._AcctID != value))
				{
					this.OnAcctIDChanging(value);
					this.SendPropertyChanging();
					this._AcctID = value;
					this.SendPropertyChanged("AcctID");
					this.OnAcctIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCAcctID", DbType="Int")]
		public System.Nullable<int> RCAcctID
		{
			get
			{
				return this._RCAcctID;
			}
			set
			{
				if ((this._RCAcctID != value))
				{
					this.OnRCAcctIDChanging(value);
					this.SendPropertyChanging();
					this._RCAcctID = value;
					this.SendPropertyChanged("RCAcctID");
					this.OnRCAcctIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCfgID", DbType="Int NOT NULL")]
		public int MapCfgID
		{
			get
			{
				return this._MapCfgID;
			}
			set
			{
				if ((this._MapCfgID != value))
				{
					this.OnMapCfgIDChanging(value);
					this.SendPropertyChanging();
					this._MapCfgID = value;
					this.SendPropertyChanged("MapCfgID");
					this.OnMapCfgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IgnoreFirstRecord", DbType="Bit NOT NULL")]
		public bool IgnoreFirstRecord
		{
			get
			{
				return this._IgnoreFirstRecord;
			}
			set
			{
				if ((this._IgnoreFirstRecord != value))
				{
					this.OnIgnoreFirstRecordChanging(value);
					this.SendPropertyChanging();
					this._IgnoreFirstRecord = value;
					this.SendPropertyChanged("IgnoreFirstRecord");
					this.OnIgnoreFirstRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataIsExpanded", DbType="Bit NOT NULL")]
		public bool DataIsExpanded
		{
			get
			{
				return this._DataIsExpanded;
			}
			set
			{
				if ((this._DataIsExpanded != value))
				{
					this.OnDataIsExpandedChanging(value);
					this.SendPropertyChanging();
					this._DataIsExpanded = value;
					this.SendPropertyChanged("DataIsExpanded");
					this.OnDataIsExpandedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="Int NOT NULL")]
		public int Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisitorDataCompressed", DbType="Bit NOT NULL")]
		public bool IsVisitorDataCompressed
		{
			get
			{
				return this._IsVisitorDataCompressed;
			}
			set
			{
				if ((this._IsVisitorDataCompressed != value))
				{
					this.OnIsVisitorDataCompressedChanging(value);
					this.SendPropertyChanging();
					this._IsVisitorDataCompressed = value;
					this.SendPropertyChanged("IsVisitorDataCompressed");
					this.OnIsVisitorDataCompressedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalSerial", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TerminalSerial
		{
			get
			{
				return this._TerminalSerial;
			}
			set
			{
				if ((this._TerminalSerial != value))
				{
					this.OnTerminalSerialChanging(value);
					this.SendPropertyChanging();
					this._TerminalSerial = value;
					this.SendPropertyChanged("TerminalSerial");
					this.OnTerminalSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataLen", DbType="Int NOT NULL")]
		public int DataLen
		{
			get
			{
				return this._DataLen;
			}
			set
			{
				if ((this._DataLen != value))
				{
					this.OnDataLenChanging(value);
					this.SendPropertyChanging();
					this._DataLen = value;
					this.SendPropertyChanged("DataLen");
					this.OnDataLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorData", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VisitorData
		{
			get
			{
				return this._VisitorData;
			}
			set
			{
				if ((this._VisitorData != value))
				{
					this.OnVisitorDataChanging(value);
					this.SendPropertyChanging();
					this._VisitorData = value;
					this.SendPropertyChanged("VisitorData");
					this.OnVisitorDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataLenCompressed", DbType="Int NOT NULL")]
		public int DataLenCompressed
		{
			get
			{
				return this._DataLenCompressed;
			}
			set
			{
				if ((this._DataLenCompressed != value))
				{
					this.OnDataLenCompressedChanging(value);
					this.SendPropertyChanging();
					this._DataLenCompressed = value;
					this.SendPropertyChanged("DataLenCompressed");
					this.OnDataLenCompressedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCount", DbType="Int")]
		public System.Nullable<int> RecordCount
		{
			get
			{
				return this._RecordCount;
			}
			set
			{
				if ((this._RecordCount != value))
				{
					this.OnRecordCountChanging(value);
					this.SendPropertyChanging();
					this._RecordCount = value;
					this.SendPropertyChanged("RecordCount");
					this.OnRecordCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TallTableInsertions", DbType="Int")]
		public System.Nullable<int> TallTableInsertions
		{
			get
			{
				return this._TallTableInsertions;
			}
			set
			{
				if ((this._TallTableInsertions != value))
				{
					this.OnTallTableInsertionsChanging(value);
					this.SendPropertyChanging();
					this._TallTableInsertions = value;
					this.SendPropertyChanged("TallTableInsertions");
					this.OnTallTableInsertionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseInsertions", DbType="Int")]
		public System.Nullable<int> ResponseInsertions
		{
			get
			{
				return this._ResponseInsertions;
			}
			set
			{
				if ((this._ResponseInsertions != value))
				{
					this.OnResponseInsertionsChanging(value);
					this.SendPropertyChanging();
					this._ResponseInsertions = value;
					this.SendPropertyChanged("ResponseInsertions");
					this.OnResponseInsertionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BulkFallbacks_TallTable", DbType="Int")]
		public System.Nullable<int> BulkFallbacks_TallTable
		{
			get
			{
				return this._BulkFallbacks_TallTable;
			}
			set
			{
				if ((this._BulkFallbacks_TallTable != value))
				{
					this.OnBulkFallbacks_TallTableChanging(value);
					this.SendPropertyChanging();
					this._BulkFallbacks_TallTable = value;
					this.SendPropertyChanged("BulkFallbacks_TallTable");
					this.OnBulkFallbacks_TallTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BulkFallbacks_Responses", DbType="Int")]
		public System.Nullable<int> BulkFallbacks_Responses
		{
			get
			{
				return this._BulkFallbacks_Responses;
			}
			set
			{
				if ((this._BulkFallbacks_Responses != value))
				{
					this.OnBulkFallbacks_ResponsesChanging(value);
					this.SendPropertyChanging();
					this._BulkFallbacks_Responses = value;
					this.SendPropertyChanged("BulkFallbacks_Responses");
					this.OnBulkFallbacks_ResponsesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MillisecondsToImport", DbType="Int")]
		public System.Nullable<int> MillisecondsToImport
		{
			get
			{
				return this._MillisecondsToImport;
			}
			set
			{
				if ((this._MillisecondsToImport != value))
				{
					this.OnMillisecondsToImportChanging(value);
					this.SendPropertyChanging();
					this._MillisecondsToImport = value;
					this.SendPropertyChanged("MillisecondsToImport");
					this.OnMillisecondsToImportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSwipes")]
	public partial class tblSwipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SwipeID;
		
		private int _PersonEventID;
		
		private int _AcctID;
		
		private int _EventID;
		
		private System.DateTime _SwipeDate;
		
		private int _TerminalID;
		
		private string _Notes;
		
		private byte _DataSource;
		
		private System.Nullable<long> _VisitorRecordCRC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSwipeIDChanging(int value);
    partial void OnSwipeIDChanged();
    partial void OnPersonEventIDChanging(int value);
    partial void OnPersonEventIDChanged();
    partial void OnAcctIDChanging(int value);
    partial void OnAcctIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnSwipeDateChanging(System.DateTime value);
    partial void OnSwipeDateChanged();
    partial void OnTerminalIDChanging(int value);
    partial void OnTerminalIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDataSourceChanging(byte value);
    partial void OnDataSourceChanged();
    partial void OnVisitorRecordCRCChanging(System.Nullable<long> value);
    partial void OnVisitorRecordCRCChanged();
    #endregion
		
		public tblSwipe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwipeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SwipeID
		{
			get
			{
				return this._SwipeID;
			}
			set
			{
				if ((this._SwipeID != value))
				{
					this.OnSwipeIDChanging(value);
					this.SendPropertyChanging();
					this._SwipeID = value;
					this.SendPropertyChanged("SwipeID");
					this.OnSwipeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonEventID", DbType="Int NOT NULL")]
		public int PersonEventID
		{
			get
			{
				return this._PersonEventID;
			}
			set
			{
				if ((this._PersonEventID != value))
				{
					this.OnPersonEventIDChanging(value);
					this.SendPropertyChanging();
					this._PersonEventID = value;
					this.SendPropertyChanged("PersonEventID");
					this.OnPersonEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctID", DbType="Int NOT NULL")]
		public int AcctID
		{
			get
			{
				return this._AcctID;
			}
			set
			{
				if ((this._AcctID != value))
				{
					this.OnAcctIDChanging(value);
					this.SendPropertyChanging();
					this._AcctID = value;
					this.SendPropertyChanged("AcctID");
					this.OnAcctIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SwipeDate", DbType="DateTime NOT NULL")]
		public System.DateTime SwipeDate
		{
			get
			{
				return this._SwipeDate;
			}
			set
			{
				if ((this._SwipeDate != value))
				{
					this.OnSwipeDateChanging(value);
					this.SendPropertyChanging();
					this._SwipeDate = value;
					this.SendPropertyChanged("SwipeDate");
					this.OnSwipeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalID", DbType="Int NOT NULL")]
		public int TerminalID
		{
			get
			{
				return this._TerminalID;
			}
			set
			{
				if ((this._TerminalID != value))
				{
					this.OnTerminalIDChanging(value);
					this.SendPropertyChanging();
					this._TerminalID = value;
					this.SendPropertyChanged("TerminalID");
					this.OnTerminalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="VarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSource", DbType="TinyInt NOT NULL")]
		public byte DataSource
		{
			get
			{
				return this._DataSource;
			}
			set
			{
				if ((this._DataSource != value))
				{
					this.OnDataSourceChanging(value);
					this.SendPropertyChanging();
					this._DataSource = value;
					this.SendPropertyChanged("DataSource");
					this.OnDataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorRecordCRC", DbType="BigInt")]
		public System.Nullable<long> VisitorRecordCRC
		{
			get
			{
				return this._VisitorRecordCRC;
			}
			set
			{
				if ((this._VisitorRecordCRC != value))
				{
					this.OnVisitorRecordCRCChanging(value);
					this.SendPropertyChanging();
					this._VisitorRecordCRC = value;
					this.SendPropertyChanged("VisitorRecordCRC");
					this.OnVisitorRecordCRCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSwipesText")]
	public partial class tblSwipesText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonEventID;
		
		private string _FieldName;
		
		private string _FieldText;
		
		private System.Nullable<int> _SeqNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonEventIDChanging(int value);
    partial void OnPersonEventIDChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldTextChanging(string value);
    partial void OnFieldTextChanged();
    partial void OnSeqNoChanging(System.Nullable<int> value);
    partial void OnSeqNoChanged();
    #endregion
		
		public tblSwipesText()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonEventID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonEventID
		{
			get
			{
				return this._PersonEventID;
			}
			set
			{
				if ((this._PersonEventID != value))
				{
					this.OnPersonEventIDChanging(value);
					this.SendPropertyChanging();
					this._PersonEventID = value;
					this.SendPropertyChanged("PersonEventID");
					this.OnPersonEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldText", DbType="VarChar(500)")]
		public string FieldText
		{
			get
			{
				return this._FieldText;
			}
			set
			{
				if ((this._FieldText != value))
				{
					this.OnFieldTextChanging(value);
					this.SendPropertyChanging();
					this._FieldText = value;
					this.SendPropertyChanged("FieldText");
					this.OnFieldTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int")]
		public System.Nullable<int> SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTerminal")]
	public partial class tblTerminal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TerminalSerial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTerminalSerialChanging(string value);
    partial void OnTerminalSerialChanged();
    #endregion
		
		public tblTerminal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalSerial", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TerminalSerial
		{
			get
			{
				return this._TerminalSerial;
			}
			set
			{
				if ((this._TerminalSerial != value))
				{
					this.OnTerminalSerialChanging(value);
					this.SendPropertyChanging();
					this._TerminalSerial = value;
					this.SendPropertyChanged("TerminalSerial");
					this.OnTerminalSerialChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

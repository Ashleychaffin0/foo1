#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestSqlCe_1 {
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


	public partial class TestSqlCeDatabase : System.Data.Linq.DataContext {

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertTblCeAlbums2(TblCeAlbums2 instance);
		partial void UpdateTblCeAlbums2(TblCeAlbums2 instance);
		partial void DeleteTblCeAlbums2(TblCeAlbums2 instance);
		#endregion

		public TestSqlCeDatabase(string connection) :
			base(connection, mappingSource) {
			OnCreated();
		}

		public TestSqlCeDatabase(System.Data.IDbConnection connection) :
			base(connection, mappingSource) {
			OnCreated();
		}

		public TestSqlCeDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
			base(connection, mappingSource) {
			OnCreated();
		}

		public TestSqlCeDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
			base(connection, mappingSource) {
			OnCreated();
		}

		public System.Data.Linq.Table<TblAlbums> TblAlbums {
			get {
				return this.GetTable<TblAlbums>();
			}
		}

		public System.Data.Linq.Table<TblCeAlbums> TblCeAlbums {
			get {
				return this.GetTable<TblCeAlbums>();
			}
		}

		public System.Data.Linq.Table<TblCeAlbums2> TblCeAlbums2 {
			get {
				return this.GetTable<TblCeAlbums2>();
			}
		}
	}

	[Table(Name = "tblAlbums")]
	public partial class TblAlbums {

		private string _Extra;

		private string _ReleaseDate;

		private string _Label;

		private string _SmallCoverURL;

		private string _LargeCoverURL;

		private string _MoreInfoURL;

		private string _XML;

		private string _XML2;

		private string _TotalTime;

		private System.Nullable<int> _TotalLengthInFrames;

		private System.Nullable<int> _TotalLengthInSeconds;

		private System.Nullable<int> _PlayLengthInSeconds;

		private string _Owner;

		private System.Nullable<bool> _Vetter;

		private System.Nullable<bool> _NeedCutName;

		private System.Nullable<bool> _NotFoundOnWeb;

		private string _Artist;

		private string _Title;

		private System.Nullable<int> _DiscID;

		public TblAlbums() {
		}

		[Column(Storage = "_Extra", DbType = "NVarChar(100)")]
		public string Extra {
			get {
				return this._Extra;
			}
			set {
				if ((this._Extra != value)) {
					this._Extra = value;
				}
			}
		}

		[Column(Name = "Release Date", Storage = "_ReleaseDate", DbType = "NVarChar(100)")]
		public string ReleaseDate {
			get {
				return this._ReleaseDate;
			}
			set {
				if ((this._ReleaseDate != value)) {
					this._ReleaseDate = value;
				}
			}
		}

		[Column(Storage = "_Label", DbType = "NVarChar(100)")]
		public string Label {
			get {
				return this._Label;
			}
			set {
				if ((this._Label != value)) {
					this._Label = value;
				}
			}
		}

		[Column(Storage = "_SmallCoverURL", DbType = "NVarChar(1000)")]
		public string SmallCoverURL {
			get {
				return this._SmallCoverURL;
			}
			set {
				if ((this._SmallCoverURL != value)) {
					this._SmallCoverURL = value;
				}
			}
		}

		[Column(Storage = "_LargeCoverURL", DbType = "NVarChar(1000)")]
		public string LargeCoverURL {
			get {
				return this._LargeCoverURL;
			}
			set {
				if ((this._LargeCoverURL != value)) {
					this._LargeCoverURL = value;
				}
			}
		}

		[Column(Storage = "_MoreInfoURL", DbType = "NVarChar(1000)")]
		public string MoreInfoURL {
			get {
				return this._MoreInfoURL;
			}
			set {
				if ((this._MoreInfoURL != value)) {
					this._MoreInfoURL = value;
				}
			}
		}

		[Column(Storage = "_XML", DbType = "NVarChar(4000)")]
		public string XML {
			get {
				return this._XML;
			}
			set {
				if ((this._XML != value)) {
					this._XML = value;
				}
			}
		}

		[Column(Storage = "_XML2", DbType = "NVarChar(4000)")]
		public string XML2 {
			get {
				return this._XML2;
			}
			set {
				if ((this._XML2 != value)) {
					this._XML2 = value;
				}
			}
		}

		[Column(Storage = "_TotalTime", DbType = "NVarChar(100)")]
		public string TotalTime {
			get {
				return this._TotalTime;
			}
			set {
				if ((this._TotalTime != value)) {
					this._TotalTime = value;
				}
			}
		}

		[Column(Storage = "_TotalLengthInFrames", DbType = "Int")]
		public System.Nullable<int> TotalLengthInFrames {
			get {
				return this._TotalLengthInFrames;
			}
			set {
				if ((this._TotalLengthInFrames != value)) {
					this._TotalLengthInFrames = value;
				}
			}
		}

		[Column(Storage = "_TotalLengthInSeconds", DbType = "Int")]
		public System.Nullable<int> TotalLengthInSeconds {
			get {
				return this._TotalLengthInSeconds;
			}
			set {
				if ((this._TotalLengthInSeconds != value)) {
					this._TotalLengthInSeconds = value;
				}
			}
		}

		[Column(Storage = "_PlayLengthInSeconds", DbType = "Int")]
		public System.Nullable<int> PlayLengthInSeconds {
			get {
				return this._PlayLengthInSeconds;
			}
			set {
				if ((this._PlayLengthInSeconds != value)) {
					this._PlayLengthInSeconds = value;
				}
			}
		}

		[Column(Storage = "_Owner", DbType = "NVarChar(100)")]
		public string Owner {
			get {
				return this._Owner;
			}
			set {
				if ((this._Owner != value)) {
					this._Owner = value;
				}
			}
		}

		[Column(Storage = "_Vetter", DbType = "Bit")]
		public System.Nullable<bool> Vetter {
			get {
				return this._Vetter;
			}
			set {
				if ((this._Vetter != value)) {
					this._Vetter = value;
				}
			}
		}

		[Column(Name = "Need Cut Name", Storage = "_NeedCutName", DbType = "Bit")]
		public System.Nullable<bool> NeedCutName {
			get {
				return this._NeedCutName;
			}
			set {
				if ((this._NeedCutName != value)) {
					this._NeedCutName = value;
				}
			}
		}

		[Column(Name = "Not Found on Web", Storage = "_NotFoundOnWeb", DbType = "Bit")]
		public System.Nullable<bool> NotFoundOnWeb {
			get {
				return this._NotFoundOnWeb;
			}
			set {
				if ((this._NotFoundOnWeb != value)) {
					this._NotFoundOnWeb = value;
				}
			}
		}

		[Column(Storage = "_Artist", DbType = "NVarChar(100)")]
		public string Artist {
			get {
				return this._Artist;
			}
			set {
				if ((this._Artist != value)) {
					this._Artist = value;
				}
			}
		}

		[Column(Storage = "_Title", DbType = "NVarChar(100)")]
		public string Title {
			get {
				return this._Title;
			}
			set {
				if ((this._Title != value)) {
					this._Title = value;
				}
			}
		}

		[Column(Storage = "_DiscID", DbType = "Int")]
		public System.Nullable<int> DiscID {
			get {
				return this._DiscID;
			}
			set {
				if ((this._DiscID != value)) {
					this._DiscID = value;
				}
			}
		}
	}

	[Table(Name = "tblCeAlbums")]
	public partial class TblCeAlbums {

		private int _AlbumID;

		private string _ArtistName;

		public TblCeAlbums() {
		}

		[Column(Storage = "_AlbumID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
		public int AlbumID {
			get {
				return this._AlbumID;
			}
			set {
				if ((this._AlbumID != value)) {
					this._AlbumID = value;
				}
			}
		}

		[Column(Storage = "_ArtistName", DbType = "NVarChar(100)")]
		public string ArtistName {
			get {
				return this._ArtistName;
			}
			set {
				if ((this._ArtistName != value)) {
					this._ArtistName = value;
				}
			}
		}
	}

	[Table(Name = "tblCeAlbums2")]
	public partial class TblCeAlbums2 : INotifyPropertyChanging, INotifyPropertyChanged {

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _AlbumID;

		private string _ArtistName;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAlbumIDChanging(int value);
		partial void OnAlbumIDChanged();
		partial void OnArtistNameChanging(string value);
		partial void OnArtistNameChanged();
		#endregion

		public TblCeAlbums2() {
			OnCreated();
		}

		[Column(Storage = "_AlbumID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		public int AlbumID {
			get {
				return this._AlbumID;
			}
			set {
				if ((this._AlbumID != value)) {
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}

		[Column(Storage = "_ArtistName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
		public string ArtistName {
			get {
				return this._ArtistName;
			}
			set {
				if ((this._ArtistName != value)) {
					this.OnArtistNameChanging(value);
					this.SendPropertyChanging();
					this._ArtistName = value;
					this.SendPropertyChanged("ArtistName");
					this.OnArtistNameChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging() {
			if ((this.PropertyChanging != null)) {
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName) {
			if ((this.PropertyChanged != null)) {
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

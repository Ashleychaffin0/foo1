//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.312.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.312")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="WsCcLeadsSoap", Namespace="http://www.LeadsLightning.com/")]
public partial class WsCcLeads : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback CcLeadsOperationCompleted;
    
    /// <remarks/>
    public WsCcLeads() {
        this.Url = "http://198.64.249.219/WsWingate/WsCcLeads.asmx";
    }
    
    /// <remarks/>
    public event CcLeadsCompletedEventHandler CcLeadsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.LeadsLightning.com/CcLeads", RequestNamespace="http://www.LeadsLightning.com/", ResponseNamespace="http://www.LeadsLightning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void CcLeads(string TargetSys, int EventID) {
        this.Invoke("CcLeads", new object[] {
                    TargetSys,
                    EventID});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCcLeads(string TargetSys, int EventID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CcLeads", new object[] {
                    TargetSys,
                    EventID}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCcLeads(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CcLeadsAsync(string TargetSys, int EventID) {
        this.CcLeadsAsync(TargetSys, EventID, null);
    }
    
    /// <remarks/>
    public void CcLeadsAsync(string TargetSys, int EventID, object userState) {
        if ((this.CcLeadsOperationCompleted == null)) {
            this.CcLeadsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCcLeadsOperationCompleted);
        }
        this.InvokeAsync("CcLeads", new object[] {
                    TargetSys,
                    EventID}, this.CcLeadsOperationCompleted, userState);
    }
    
    private void OnCcLeadsOperationCompleted(object arg) {
        if ((this.CcLeadsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CcLeadsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.312")]
public delegate void CcLeadsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
